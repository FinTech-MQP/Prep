{"version":3,"sources":["../src/client.ts"],"sourcesContent":["import { Prisma, PrismaClient } from \"../generated/prisma-client\";\r\n\r\nexport const prisma = new PrismaClient().$extends({\r\n  result: {\r\n    parcel: {\r\n      acres: {\r\n        needs: { sqft: true },\r\n        compute(parcel) {\r\n          return parcel.sqft / 43560;\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ntype ExtendedPrismaClient = typeof prisma\r\n\r\ndeclare global {\r\n  var prisma: ExtendedPrismaClient | undefined;\r\n}\r\n\r\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\r\n\r\nexport type ListingPayload = Prisma.ListingGetPayload<{\r\n  include: {\r\n    address: {\r\n      include: {\r\n        parcel: {\r\n          include: {\r\n            zone: true;\r\n            assessments: true;\r\n            landUse: true;\r\n          };\r\n        };\r\n      };\r\n    };\r\n  };\r\n}>;\r\n"],"mappings":";AAAA,SAAiB,oBAAoB;AAE9B,IAAM,SAAS,IAAI,aAAa,EAAE,SAAS;AAAA,EAChD,QAAQ;AAAA,IACN,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,OAAO,EAAE,MAAM,KAAK;AAAA,QACpB,QAAQ,QAAQ;AACd,iBAAO,OAAO,OAAO;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAQD,IAAI,QAAQ,IAAI,aAAa;AAAc,SAAO,SAAS;","names":[]}